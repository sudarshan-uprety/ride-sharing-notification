syntax = "proto3";

package notification;
option go_package = "ride-sharing-notification/internal/delivery/rpc";

import "google/protobuf/timestamp.proto";

service NotificationService {
  rpc SendEmail(EmailRequest) returns (NotificationResponse);
  rpc SendPush(PushRequest) returns (NotificationResponse);
  rpc ProcessKafkaNotification(KafkaNotificationRequest) returns (NotificationResponse);
}

message EmailRequest {
  string to = 1;
  string subject = 2;
  string body = 3;
  bool use_fallback = 4;
}

message PushRequest {
  string device_token = 1;
  string title = 2;
  string body = 3;
  map<string, string> data = 4;
  bool use_fallback = 5;
}

message NotificationResponse {
  bool success = 1;
  string message = 2;
  string notification_id = 3;
  bool used_fallback = 4;
}

message KafkaNotificationRequest {
  string message_id = 1;
  bytes payload = 2;
  google.protobuf.Timestamp created_at = 3;
  string notification_type = 4;
}